@{
    ViewData["Title"] = "Route Management";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<style>
    .modal-body {
        max-height: 70vh;
        overflow-y: auto;
    }
    .segment-item {
        display: flex;
        flex-direction: column;
        gap: 10px;
        margin-top: 10px;
    }
    .segment-station {
        font-weight: 500;
    }
    .segment-line {
        border-left: 2px solid #ccc;
        height: 15px;
        margin-left: 8px;
    }

    .modal {
        z-index: 1050 !important;
    }

    .modal-backdrop {
        z-index: 1040 !important;
    }
</style>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}
@if (TempData["Error22"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}
<div class="d-flex justify-content-between align-items-center mb-4">
    <h4 class="mb-0">Route Management</h4>
    <button class="btn btn-primary"><i class="bi bi-plus-lg"></i> <a class="btn btn-primary" href="/RouteManagement/Create">Create New Route</a></button>
</div>

<div class="card">
    <div class="card-body">
        <div class="row mb-4">
            <div class="col-md-3">
                <select class="form-select">
                    <option>Filter by Status</option>
                    <option>Active</option>
                    <option>Inactive</option>
                    
                </select>
            </div>
        </div>
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Route Name</th>
                        <th>Departure Station</th>
                        <th>Arrival Station</th>
                        <th>Segments</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Route Modal -->
<div class="modal fade" id="routeModal" tabindex="-1" role="dialog" aria-labelledby="routeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title" id="routeModalLabel">Route Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <h6>Route Segments</h6>
                <div class="route-segments">
                    <p>Loading segments...</p>
                </div>
            </div>

        </div>
    </div>
</div>

<script>
    async function loadRoutes() {
        try {
            const response = await fetch('/RouteManagement/GetAllRoutes');
            if (!response.ok) throw new Error('Failed to fetch');

            const routes = await response.json();

            const tbody = document.querySelector('table tbody');
            tbody.innerHTML = '';

            routes.forEach(route => {
                const row = `
                        <tr>
                            <td>${route.routeName}</td>
                                <td>${route.departureStationName}</td>
                            <td>${route.arrivalStationName}</td>
                            <td>${route.segments.length}</td>
                                <td><span class="badge bg-${route.isActive ? "success" : "danger"}">
                            ${route.isActive ? "Hoạt động" : "Không hoạt động"}
                        </span></td>
                            <td>
                                    <button class="btn btn-sm btn-primary btn-view" data-id="${route.routeId}" data-toggle="modal" data-target="#routeModal">
                                    <i class="bi bi-eye"></i>
                                        </button>
                                    <a asp-action="Edit" asp-route-id="${route.routeId}" class="btn btn-sm btn-warning">
        <i class="bi bi-pencil"></i>
    </a>
                                    <form asp-action="Delete" asp-route-id="${route.routeId}" method="delete" class="d-inline"
          onsubmit="return confirm('Bạn có chắc chắn muốn xóa tuyến đường này không?');">
        <button type="submit" class="btn btn-sm btn-danger">
            <i class="bi bi-trash"></i>
        </button>
    </form>
                            </td>
                        </tr>`;
                tbody.insertAdjacentHTML('beforeend', row);
            });

        } catch (err) {
            console.error('Error loading routes:', err);
        }
    }

    // Gọi khi load xong trang
    document.addEventListener('DOMContentLoaded', loadRoutes);
</script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        loadRoutes();
        const apiBaseUrl = '@ViewBag.ApiBaseUrl';
        // Gắn sự kiện khi bấm nút "View"
        document.querySelector('table').addEventListener('click', async (e) => {
            const button = e.target.closest('.btn-view');
            if (button) {
                const routeId = button.getAttribute('data-id');

                try {
                    const response = await fetch(`${apiBaseUrl}/api/Route/${routeId}`);
                    if (!response.ok) throw new Error("Failed to fetch route detail");

                    const route = await response.json();

                    // Cập nhật nội dung modal
                    document.querySelector('#routeModal .modal-title').textContent = `Route Details: ${route.routeName}`;
                    const segmentDiv = document.querySelector('#routeModal .route-segments');
                    segmentDiv.innerHTML = '';

                    if (route.segments && route.segments.length > 0) {
                        let html = '<div class="segment-item">';
                        route.segments.forEach((seg, index) => {
                            html += `<div class="segment-station">${seg.fromStationName} - ${seg.toStationName}</div>`;
                            if (index < route.segments.length - 1) {
                                html += `<div class="segment-line"></div>`;
                            }
                        });
                        html += '</div>';
                        segmentDiv.innerHTML = html;
                    } else {
                        segmentDiv.innerHTML = '<p>No segments found.</p>';
                    }

                    // ✅ Gọi modal hiện ra
                    $('#routeModal').modal('show');

                } catch (err) {
                    console.error(err);
                    alert("Failed to load route details.");
                }
            }
        });
    });
</script>

<