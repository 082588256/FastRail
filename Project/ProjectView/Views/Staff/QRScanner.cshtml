@{
    ViewData["Title"] = "QR Scanner";
    Layout = "_StaffLayout";
}

<style>
    .staff-dashboard {
        display: flex;
        min-height: 100vh;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .sidebar {
        width: 280px;
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        box-shadow: 2px 0 20px rgba(0, 0, 0, 0.1);
        padding: 30px 0;
        position: fixed;
        height: 100vh;
        overflow-y: auto;
    }

    .main-content {
        flex: 1;
        margin-left: 280px;
        padding: 30px;
        background: #f8f9fa;
        min-height: 100vh;
    }

    .sidebar-header {
        text-align: center;
        padding: 0 30px 30px;
        border-bottom: 1px solid #e9ecef;
        margin-bottom: 30px;
    }

    .staff-avatar {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea, #764ba2);
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 15px;
        color: white;
        font-size: 32px;
        font-weight: bold;
    }

    .staff-name {
        font-size: 18px;
        font-weight: 600;
        color: #333;
        margin-bottom: 5px;
    }

    .staff-role {
        font-size: 14px;
        color: #666;
    }

    .nav-menu {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .nav-item {
        margin-bottom: 5px;
    }

    .nav-link {
        display: flex;
        align-items: center;
        padding: 15px 30px;
        color: #555;
        text-decoration: none;
        transition: all 0.3s ease;
        border-left: 3px solid transparent;
    }

    .nav-link:hover {
        background: rgba(102, 126, 234, 0.1);
        color: #667eea;
        border-left-color: #667eea;
        text-decoration: none;
    }

    .nav-link.active {
        background: rgba(102, 126, 234, 0.15);
        color: #667eea;
        border-left-color: #667eea;
        font-weight: 600;
    }

    .nav-icon {
        width: 20px;
        margin-right: 15px;
        font-size: 16px;
    }

    .scanner-container {
        background: white;
        border-radius: 15px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
        padding: 30px;
        max-width: 800px;
        margin: 0 auto;
    }

    .scanner-header {
        text-align: center;
        margin-bottom: 30px;
    }

    .scanner-header h2 {
        color: #333;
        font-size: 24px;
        font-weight: 700;
        margin-bottom: 10px;
    }

    .scanner-header p {
        color: #666;
        font-size: 16px;
    }

    .scanner-area {
        text-align: center;
        padding: 40px;
        border: 3px dashed #e9ecef;
        border-radius: 15px;
        margin-bottom: 30px;
        transition: all 0.3s ease;
    }

    .scanner-area.active {
        border-color: #667eea;
        background: rgba(102, 126, 234, 0.05);
    }

    .scanner-icon {
        font-size: 64px;
        color: #667eea;
        margin-bottom: 20px;
    }

    .scanner-text {
        font-size: 18px;
        color: #666;
        margin-bottom: 30px;
    }

    .scan-options {
        display: flex;
        gap: 15px;
        justify-content: center;
        flex-wrap: wrap;
    }

    .scan-btn {
        padding: 12px 25px;
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 600;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .scan-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
    }

    .scan-btn:disabled {
        opacity: 0.6;
        cursor: not-allowed;
        transform: none;
    }

    .ticket-info {
        display: none;
        background: #f8f9fa;
        border-radius: 15px;
        padding: 25px;
        margin-top: 30px;
    }

    .ticket-info.show {
        display: block;
    }

    .ticket-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 2px solid #e9ecef;
    }

    .ticket-header h3 {
        color: #333;
        font-size: 20px;
        font-weight: 600;
        margin: 0;
    }

    .ticket-status {
        padding: 8px 16px;
        border-radius: 20px;
        font-size: 14px;
        font-weight: 600;
        text-transform: uppercase;
    }

    .status-valid {
        background: #d4edda;
        color: #155724;
    }

    .status-invalid {
        background: #f8d7da;
        color: #721c24;
    }

    .ticket-details {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 25px;
    }

    .detail-group {
        background: white;
        padding: 15px;
        border-radius: 10px;
        border: 1px solid #e9ecef;
    }

    .detail-label {
        font-size: 12px;
        color: #666;
        text-transform: uppercase;
        letter-spacing: 1px;
        margin-bottom: 5px;
        font-weight: 600;
    }

    .detail-value {
        font-size: 16px;
        color: #333;
        font-weight: 500;
    }

    .action-buttons {
        display: flex;
        gap: 15px;
        justify-content: center;
    }

    .validate-btn {
        padding: 15px 30px;
        background: linear-gradient(135deg, #28a745, #20c997);
        color: white;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 600;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .validate-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 25px rgba(40, 167, 69, 0.3);
    }

    .validate-btn:disabled {
        opacity: 0.6;
        cursor: not-allowed;
        transform: none;
    }

    .alert {
        padding: 15px 20px;
        border-radius: 8px;
        margin-bottom: 20px;
        font-weight: 500;
    }

    .alert-success {
        background: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }

    .alert-danger {
        background: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }

    .alert-warning {
        background: #fff3cd;
        color: #856404;
        border: 1px solid #ffeaa7;
    }

    .loading-spinner {
        display: inline-block;
        width: 16px;
        height: 16px;
        border: 2px solid #ffffff;
        border-radius: 50%;
        border-top-color: transparent;
        animation: spin 1s ease-in-out infinite;
    }

    @@keyframes spin {
        to { transform: rotate(360deg); }
    }

    .logout-btn {
        position: absolute;
        bottom: 30px;
        left: 30px;
        right: 30px;
        padding: 12px;
        background: #dc3545;
        color: white;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
        font-size: 14px;
    }

    .logout-btn:hover {
        background: #c82333;
        transform: translateY(-2px);
    }

    @@media (max-width: 768px) {
        .sidebar {
            transform: translateX(-100%);
            transition: transform 0.3s ease;
        }

        .sidebar.open {
            transform: translateX(0);
        }

        .main-content {
            margin-left: 0;
        }

        .scan-options {
            flex-direction: column;
        }

        .action-buttons {
            flex-direction: column;
        }
    }
</style>

<div class="staff-dashboard">
    <!-- Sidebar -->
    <div class="sidebar" id="sidebar">
        <div class="sidebar-header">
            <div class="staff-avatar" id="staffAvatar">
                <i class="fa fa-user"></i>
            </div>
            <div class="staff-name" id="staffName">Staff Member</div>
            <div class="staff-role">Station Staff</div>
        </div>

        <ul class="nav-menu">
            <li class="nav-item">
                <a href="/Staff/Management" class="nav-link">
                    <i class="fa fa-dashboard nav-icon"></i>
                    Dashboard
                </a>
            </li>
            <li class="nav-item">
                <a href="/Staff/QRScanner" class="nav-link active">
                    <i class="fa fa-qrcode nav-icon"></i>
                    QR Scanner
                </a>
            </li>
            <li class="nav-item">
                <a href="/Staff/CustomerList" class="nav-link">
                    <i class="fa fa-users nav-icon"></i>
                    Customer List
                </a>
            </li>
        </ul>

        <button class="logout-btn" onclick="logout()">
            <i class="fa fa-sign-out"></i> Logout
        </button>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <div class="scanner-container">
            <div class="scanner-header">
                <h2><i class="fa fa-qrcode"></i> QR Code Scanner</h2>
                <p>Scan booking QR codes for boarding validation</p>
            </div>

            <div id="alert-container"></div>

            <div class="scanner-area" id="scannerArea">
                <div class="scanner-icon">
                    <i class="fa fa-qrcode"></i>
                </div>
                <div class="scanner-text">
                    Upload a QR code image or enter booking code manually
                </div>
                <div class="scan-options">
                    <input type="file" id="qrImageInput" accept="image/*" style="display: none;" onchange="handleImageUpload(event)">
                    <button class="scan-btn" onclick="document.getElementById('qrImageInput').click()">
                        <i class="fa fa-upload"></i> Upload QR Image
                    </button>
                    <button class="scan-btn" id="manualBtn" onclick="showManualInput()">
                        <i class="fa fa-keyboard-o"></i> Manual Input
                    </button>
                </div>
                <div id="imagePreview" style="display: none; margin-top: 20px;">
                    <img id="previewImg" style="max-width: 200px; border-radius: 10px;">
                    <button class="scan-btn" onclick="scanUploadedImage()" style="margin-top: 10px;">
                        <i class="fa fa-search"></i> Scan This Image
                    </button>
                </div>
            </div>

            <div class="ticket-info" id="ticketInfo">
                <div class="ticket-header">
                    <h3>Booking Information</h3>
                    <div class="ticket-status" id="ticketStatus">Valid</div>
                </div>

                <div class="ticket-details" id="ticketDetails">
                    <!-- Booking details will be populated here -->
                </div>

                <div class="action-buttons">
                    <button class="validate-btn" id="validateBtn" onclick="validateBooking()">
                        <i class="fa fa-check"></i> Validate & Check In
                    </button>
                    <button class="scan-btn" onclick="resetScanner()">
                        <i class="fa fa-refresh"></i> Scan Another
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Manual Input Modal -->
<div id="manualModal" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 1000;">
    <div style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background: white; padding: 30px; border-radius: 15px; width: 90%; max-width: 400px;">
        <h3 style="margin-bottom: 20px;">Manual Booking Code Input</h3>
        <input type="text" id="manualBookingCode" placeholder="Enter booking code" style="width: 100%; padding: 15px; border: 2px solid #ddd; border-radius: 10px; margin-bottom: 20px;">
        <div style="text-align: right;">
            <button onclick="closeManualModal()" style="background: #6c757d; color: white; border: none; padding: 10px 20px; border-radius: 5px; margin-right: 10px;">Cancel</button>
            <button onclick="processManualInput()" style="background: #667eea; color: white; border: none; padding: 10px 20px; border-radius: 5px;">Submit</button>
        </div>
    </div>
</div>

<script>
let currentBookingCode = null;
let staffToken = null;
let staffUser = null;

// Use the correct backend API base URL for development
const apiBaseUrl = 'http://localhost:5014';

document.addEventListener('DOMContentLoaded', function() {
    // Check authentication
    staffToken = localStorage.getItem('staffToken');
    const staffUserStr = localStorage.getItem('staffUser');
    
    if (!staffToken || !staffUserStr) {
        window.location.href = '/Auth/StaffLogin';
        return;
    }

    try {
        staffUser = JSON.parse(staffUserStr);
        updateStaffInfo();
    } catch (e) {
        console.error('Error parsing staff user:', e);
        logout();
    }

    // Validate token
    validateToken();
});

function updateStaffInfo() {
    const staffName = document.getElementById('staffName');
    const staffAvatar = document.getElementById('staffAvatar');
    
    if (staffUser) {
        staffName.textContent = staffUser.fullName || 'Staff Member';
        
        // Set avatar with initials
        if (staffUser.fullName) {
            const initials = staffUser.fullName.split(' ').map(n => n[0]).join('').toUpperCase();
            staffAvatar.innerHTML = initials;
        }
    }
}

async function validateToken() {
    try {
        const response = await fetch(`${apiBaseUrl}/api/auth/staff/validate`, {
            headers: {
                'Authorization': `Bearer ${staffToken}`
            }
        });

        if (!response.ok) {
            logout();
        }
    } catch (error) {
        console.error('Token validation error:', error);
        logout();
    }
}

function logout() {
    localStorage.removeItem('staffToken');
    localStorage.removeItem('staffUser');
    window.location.href = '/Auth/StaffLogin';
}

let uploadedImageFile = null;

function handleImageUpload(event) {
    const file = event.target.files[0];
    if (file) {
        uploadedImageFile = file;
        
        // Show preview
        const reader = new FileReader();
        reader.onload = function(e) {
            document.getElementById('previewImg').src = e.target.result;
            document.getElementById('imagePreview').style.display = 'block';
        };
        reader.readAsDataurl(~file);
    }
}

async function scanUploadedImage() {
    if (!uploadedImageFile) {
        showAlert('Please upload an image first', 'warning');
        return;
    }

    try {
        const formData = new FormData();
        formData.append('QRImage', uploadedImageFile);

        const response = await fetch(`${apiBaseUrl}/api/qrscanner/scan-image`, {
            method: 'POST',
            headers: {
                'Authorization': `Bearer ${staffToken}`
            },
            body: formData
        });

        const result = await response.json();
        console.log('Image scan API response:', result);

        if (result.success) {
            currentBookingCode = result.data.bookingCode;
            displayBookingInfo(result.data);
            showAlert('Booking scanned successfully from image!', 'success');
        } else {
            showAlert(result.message || 'Failed to scan image', 'danger');
        }
    } catch (error) {
        console.error('Image scan error:', error);
        showAlert('An error occurred while scanning image', 'danger');
    }
}

function showManualInput() {
    document.getElementById('manualModal').style.display = 'block';
    document.getElementById('manualBookingCode').focus();
}

function closeManualModal() {
    document.getElementById('manualModal').style.display = 'none';
    document.getElementById('manualBookingCode').value = '';
}

async function processManualInput() {
    const bookingCode = document.getElementById('manualBookingCode').value.trim();
    if (!bookingCode) {
        showAlert('Please enter a booking code', 'danger');
        return;
    }

    closeManualModal();
    await scanBooking(bookingCode);
}

async function scanBooking(bookingCode) {
    try {
        const scannerArea = document.getElementById('scannerArea');
        const scanBtn = document.getElementById('scanBtn');
        
        scannerArea.classList.add('active');
        scanBtn.disabled = true;
        scanBtn.innerHTML = '<span class="loading-spinner"></span> Scanning...';

        const response = await fetch(`${apiBaseUrl}/api/qrscanner/scan`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${staffToken}`
            },
            body: JSON.stringify({
                qrCodeData: JSON.stringify({
                    bookingCode: bookingCode,
                    timestamp: new Date().toISOString(),
                    type: "train_booking"
                })
            })
        });

        const result = await response.json();
        console.log('Scan API response:', result);

        if (result.success) {
            currentBookingCode = bookingCode;
            displayBookingInfo(result.data);
            showAlert('Booking scanned successfully!', 'success');
        } else {
            showAlert(result.message || 'Failed to scan booking', 'danger');
        }
    } catch (error) {
        console.error('Scan error:', error);
        showAlert('An error occurred while scanning', 'danger');
    } finally {
        const scannerArea = document.getElementById('scannerArea');
        const scanBtn = document.getElementById('scanBtn');
        scannerArea.classList.remove('active');
        scanBtn.disabled = false;
        scanBtn.innerHTML = '<i class="fa fa-camera"></i> Start Scanning';
    }
}

function displayBookingInfo(booking) {
    console.log('Displaying booking info:', booking);
    
    const ticketInfo = document.getElementById('ticketInfo');
    const ticketDetails = document.getElementById('ticketDetails');
    const ticketStatus = document.getElementById('ticketStatus');

    // Set status
    const isValid = (booking.bookingStatus || booking.status) === 'Confirmed' || (booking.status === 'Valid');
    ticketStatus.textContent = isValid ? 'Valid' : 'Invalid';
    ticketStatus.className = `ticket-status ${isValid ? 'status-valid' : 'status-invalid'}`;

    // Populate details
    ticketDetails.innerHTML = `
        <div class="detail-group">
            <div class="detail-label">Booking Code</div>
            <div class="detail-value">${booking.bookingCode || 'N/A'}</div>
        </div>
        <div class="detail-group">
            <div class="detail-label">Customer Name</div>
            <div class="detail-value">${booking.contactName || booking.passengerName || 'N/A'}</div>
        </div>
        <div class="detail-group">
            <div class="detail-label">Contact Phone</div>
            <div class="detail-value">${booking.contactPhone || booking.passengerPhone || 'N/A'}</div>
        </div>
        <div class="detail-group">
            <div class="detail-label">Trip</div>
            <div class="detail-value">${booking.tripCode || 'N/A'}</div>
        </div>
        <div class="detail-group">
            <div class="detail-label">Train</div>
            <div class="detail-value">${booking.trainNumber || 'N/A'}</div>
        </div>
        <div class="detail-group">
            <div class="detail-label">From</div>
            <div class="detail-value">${booking.departureStation || 'N/A'}</div>
        </div>
        <div class="detail-group">
            <div class="detail-label">To</div>
            <div class="detail-value">${booking.arrivalStation || 'N/A'}</div>
        </div>
        <div class="detail-group">
            <div class="detail-label">Departure</div>
            <div class="detail-value">${booking.departureTime ? new Date(booking.departureTime).toLocaleString() : 'N/A'}</div>
        </div>
        <div class="detail-group">
            <div class="detail-label">Total Price</div>
            <div class="detail-value">${booking.totalPrice != null ? Number(booking.totalPrice).toLocaleString() : 'N/A'} VND</div>
        </div>
        <div class="detail-group">
            <div class="detail-label">Tickets</div>
            <div class="detail-value">${booking.tickets ? booking.tickets.length : booking.ticketCount || 'N/A'}</div>
        </div>
    `;

    ticketInfo.classList.add('show');
}

async function validateBooking() {
    if (!currentBookingCode) {
        showAlert('No booking to validate', 'danger');
        return;
    }

    const validateBtn = document.getElementById('validateBtn');
    validateBtn.disabled = true;
    validateBtn.innerHTML = '<span class="loading-spinner"></span> Validating...';

    try {
        const response = await fetch(`${apiBaseUrl}/api/qrscanner/validate`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${staffToken}`
            },
            body: JSON.stringify({
                bookingCode: currentBookingCode
            })
        });

        const result = await response.json();

        if (result.success) {
            showAlert('Booking validated and checked in successfully!', 'success');
            setTimeout(() => {
                resetScanner();
            }, 2000);
        } else {
            showAlert(result.message || 'Failed to validate booking', 'danger');
        }
    } catch (error) {
        console.error('Validation error:', error);
        showAlert('An error occurred while validating booking', 'danger');
    } finally {
        validateBtn.disabled = false;
        validateBtn.innerHTML = '<i class="fa fa-check"></i> Validate & Check In';
    }
}

function resetScanner() {
    currentBookingCode = null;
    uploadedImageFile = null;
    
    document.getElementById('ticketInfo').classList.remove('show');
    document.getElementById('imagePreview').style.display = 'none';
    document.getElementById('qrImageInput').value = '';
    document.getElementById('alert-container').innerHTML = '';
}

function showAlert(message, type) {
    const alertContainer = document.getElementById('alert-container');
    alertContainer.innerHTML = `
        <div class="alert alert-${type}">
            ${message}
        </div>
    `;
    
    // Auto-hide after 5 seconds
    setTimeout(() => {
        alertContainer.innerHTML = '';
    }, 5000);
}
</script> 