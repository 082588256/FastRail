@{
    ViewData["Title"] = "Customer List";
    Layout = "_StaffLayout";
}

<style>
    .staff-dashboard {
        display: flex;
        min-height: 100vh;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .sidebar {
        width: 280px;
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        box-shadow: 2px 0 20px rgba(0, 0, 0, 0.1);
        padding: 30px 0;
        position: fixed;
        height: 100vh;
        overflow-y: auto;
    }

    .main-content {
        flex: 1;
        margin-left: 280px;
        padding: 30px;
        background: #f8f9fa;
        min-height: 100vh;
    }

    .sidebar-header {
        text-align: center;
        padding: 0 30px 30px;
        border-bottom: 1px solid #e9ecef;
        margin-bottom: 30px;
    }

    .staff-avatar {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea, #764ba2);
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 15px;
        color: white;
        font-size: 32px;
        font-weight: bold;
    }

    .staff-name {
        font-size: 18px;
        font-weight: 600;
        color: #333;
        margin-bottom: 5px;
    }

    .staff-role {
        font-size: 14px;
        color: #666;
    }

    .nav-menu {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .nav-item {
        margin-bottom: 5px;
    }

    .nav-link {
        display: flex;
        align-items: center;
        padding: 15px 30px;
        color: #555;
        text-decoration: none;
        transition: all 0.3s ease;
        border-left: 3px solid transparent;
    }

    .nav-link:hover {
        background: rgba(102, 126, 234, 0.1);
        color: #667eea;
        border-left-color: #667eea;
        text-decoration: none;
    }

    .nav-link.active {
        background: rgba(102, 126, 234, 0.15);
        color: #667eea;
        border-left-color: #667eea;
        font-weight: 600;
    }

    .nav-icon {
        width: 20px;
        margin-right: 15px;
        font-size: 16px;
    }

    .page-header {
        background: white;
        padding: 30px;
        border-radius: 15px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
        margin-bottom: 30px;
    }

    .page-title {
        font-size: 28px;
        font-weight: 700;
        color: #333;
        margin-bottom: 10px;
    }

    .page-subtitle {
        color: #666;
        font-size: 16px;
    }

    .filters-section {
        background: white;
        padding: 25px;
        border-radius: 15px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
        margin-bottom: 30px;
    }

    .filters-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        align-items: end;
    }

    .filter-group {
        display: flex;
        flex-direction: column;
    }

    .filter-label {
        font-weight: 600;
        color: #333;
        margin-bottom: 8px;
        font-size: 14px;
    }

    .filter-input {
        padding: 12px 15px;
        border: 2px solid #e9ecef;
        border-radius: 8px;
        font-size: 14px;
        transition: border-color 0.3s ease;
    }

    .filter-input:focus {
        outline: none;
        border-color: #667eea;
    }

    .filter-select {
        padding: 12px 15px;
        border: 2px solid #e9ecef;
        border-radius: 8px;
        font-size: 14px;
        background: white;
        transition: border-color 0.3s ease;
    }

    .filter-select:focus {
        outline: none;
        border-color: #667eea;
    }

    .filter-buttons {
        display: flex;
        gap: 10px;
        align-items: end;
    }

    .btn-primary {
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        border: none;
        padding: 12px 25px;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
    }

    .btn-secondary {
        background: #6c757d;
        color: white;
        border: none;
        padding: 12px 25px;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .btn-secondary:hover {
        background: #5a6268;
        transform: translateY(-2px);
    }

    .customers-table {
        background: white;
        border-radius: 15px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    .table-header {
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        padding: 20px 30px;
    }

    .table-title {
        font-size: 20px;
        font-weight: 600;
        margin: 0;
    }

    .table-container {
        overflow-x: auto;
    }

    .customers-table table {
        width: 100%;
        border-collapse: collapse;
    }

    .customers-table th {
        background: #f8f9fa;
        padding: 15px;
        text-align: left;
        font-weight: 600;
        color: #333;
        border-bottom: 2px solid #e9ecef;
        font-size: 14px;
    }

    .customers-table td {
        padding: 15px;
        border-bottom: 1px solid #e9ecef;
        font-size: 14px;
        color: #555;
    }

    .customers-table tr:hover {
        background: #f8f9fa;
    }

    .status-badge {
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 600;
        text-transform: uppercase;
    }

    .status-confirmed {
        background: #d4edda;
        color: #155724;
    }

    .status-pending {
        background: #fff3cd;
        color: #856404;
    }

    .status-cancelled {
        background: #f8d7da;
        color: #721c24;
    }

    .status-expired {
        background: #e2e3e5;
        color: #383d41;
    }

    .payment-status {
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 600;
        text-transform: uppercase;
    }

    .payment-completed {
        background: #d4edda;
        color: #155724;
    }

    .payment-pending {
        background: #fff3cd;
        color: #856404;
    }

    .payment-failed {
        background: #f8d7da;
        color: #721c24;
    }

    .pagination {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 30px;
        gap: 10px;
    }

    .pagination button {
        padding: 10px 15px;
        border: 2px solid #e9ecef;
        background: white;
        color: #333;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
        font-weight: 600;
    }

    .pagination button:hover:not(:disabled) {
        border-color: #667eea;
        color: #667eea;
    }

    .pagination button:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }

    .pagination .current-page {
        background: #667eea;
        color: white;
        border-color: #667eea;
    }

    .loading-spinner {
        display: none;
        text-align: center;
        padding: 50px;
        color: #667eea;
    }

    .loading-spinner.show {
        display: block;
    }

    .no-data {
        text-align: center;
        padding: 50px;
        color: #666;
    }

    .logout-btn {
        position: absolute;
        bottom: 30px;
        left: 30px;
        right: 30px;
        padding: 12px;
        background: #dc3545;
        color: white;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
        font-size: 14px;
    }

    .logout-btn:hover {
        background: #c82333;
        transform: translateY(-2px);
    }

    @@media (max-width: 768px) {
        .sidebar {
            transform: translateX(-100%);
            transition: transform 0.3s ease;
        }

        .sidebar.open {
            transform: translateX(0);
        }

        .main-content {
            margin-left: 0;
        }

        .filters-grid {
            grid-template-columns: 1fr;
        }

        .filter-buttons {
            flex-direction: column;
        }
    }
</style>

<div class="staff-dashboard">
    <!-- Sidebar -->
    <div class="sidebar" id="sidebar">
        <div class="sidebar-header">
            <div class="staff-avatar" id="staffAvatar">
                <i class="fa fa-user"></i>
            </div>
            <div class="staff-name" id="staffName">Staff Member</div>
            <div class="staff-role">Station Staff</div>
        </div>

        <ul class="nav-menu">
            <li class="nav-item">
                <a href="/Staff/Management" class="nav-link">
                    <i class="fa fa-dashboard nav-icon"></i>
                    Dashboard
                </a>
            </li>
            <li class="nav-item">
                <a href="/Staff/QRScanner" class="nav-link">
                    <i class="fa fa-qrcode nav-icon"></i>
                    QR Scanner
                </a>
            </li>
            <li class="nav-item">
                <a href="/Staff/CustomerList" class="nav-link active">
                    <i class="fa fa-users nav-icon"></i>
                    Customer List
                </a>
            </li>
        </ul>

        <button class="logout-btn" onclick="logout()">
            <i class="fa fa-sign-out"></i> Logout
        </button>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <div class="page-header">
            <h1 class="page-title">Customer List</h1>
            <p class="page-subtitle">Manage and view all customer bookings</p>
        </div>

        <div class="filters-section">
            <div class="filters-grid">
                <div class="filter-group">
                    <label class="filter-label">Search</label>
                    <input type="text" id="searchTerm" class="filter-input" placeholder="Booking code, name, phone...">
                </div>

                <div class="filter-group">
                    <label class="filter-label">Payment Status</label>
                    <select id="paymentStatus" class="filter-select">
                        <option value="">All Statuses</option>
                        <option value="Completed">Completed</option>
                        <option value="Pending">Pending</option>
                        <option value="Failed">Failed</option>
                        <option value="Refunded">Refunded</option>
                    </select>
                </div>

                <div class="filter-group">
                    <label class="filter-label">Created From</label>
                    <input type="date" id="createdFrom" class="filter-input">
                </div>

                <div class="filter-group">
                    <label class="filter-label">Created To</label>
                    <input type="date" id="createdTo" class="filter-input">
                </div>

                <div class="filter-group">
                    <label class="filter-label">Trip</label>
                    <select id="tripId" class="filter-select">
                        <option value="">All Trips</option>
                        <!-- Trip options will be loaded dynamically -->
                    </select>
                </div>

                <div class="filter-buttons">
                    <button class="btn-primary" onclick="searchCustomers()">
                        <i class="fa fa-search"></i> Search
                    </button>
                    <button class="btn-secondary" onclick="clearFilters()">
                        <i class="fa fa-times"></i> Clear
                    </button>
                </div>
            </div>
        </div>

        <div class="customers-table">
            <div class="table-header">
                <h3 class="table-title">Customer Bookings</h3>
            </div>

            <div class="loading-spinner" id="loadingSpinner">
                <i class="fa fa-spinner fa-spin fa-2x"></i>
                <p>Loading customers...</p>
            </div>

            <div class="table-container">
                <table id="customersTable">
                    <thead>
                        <tr>
                            <th>Booking Code</th>
                            <th>Customer Name</th>
                            <th>Contact Info</th>
                            <th>Trip</th>
                            <th>Departure</th>
                            <th>Status</th>
                            <th>Payment</th>
                            <th>Total Price</th>
                            <th>Tickets</th>
                            <th>Created</th>
                        </tr>
                    </thead>
                    <tbody id="customersTableBody">
                        <!-- Data will be populated here -->
                    </tbody>
                </table>
            </div>

            <div class="no-data" id="noData" style="display: none;">
                <i class="fa fa-users fa-3x" style="color: #ccc; margin-bottom: 20px;"></i>
                <h3>No customers found</h3>
                <p>Try adjusting your search criteria</p>
            </div>

            <div class="pagination" id="pagination">
                <!-- Pagination will be populated here -->
            </div>
        </div>
    </div>
</div>

<script>
let staffToken = null;
let staffUser = null;
let currentPage = 1;
let totalPages = 1;
let currentFilters = {};

// Use the correct backend API base URL for development
const apiBaseUrl = 'http://localhost:5014';

document.addEventListener('DOMContentLoaded', function() {
    // Check authentication
    staffToken = localStorage.getItem('staffToken');
    const staffUserStr = localStorage.getItem('staffUser');
    
    if (!staffToken || !staffUserStr) {
        window.location.href = '/Auth/StaffLogin';
        return;
    }

    try {
        staffUser = JSON.parse(staffUserStr);
        updateStaffInfo();
    } catch (e) {
        console.error('Error parsing staff user:', e);
        logout();
    }

    // Validate token and load data
    validateToken();
    loadTrips();
    loadCustomers();
});

function updateStaffInfo() {
    const staffName = document.getElementById('staffName');
    const staffAvatar = document.getElementById('staffAvatar');
    
    if (staffUser) {
        staffName.textContent = staffUser.fullName || 'Staff Member';
        
        // Set avatar with initials
        if (staffUser.fullName) {
            const initials = staffUser.fullName.split(' ').map(n => n[0]).join('').toUpperCase();
            staffAvatar.innerHTML = initials;
        }
    }
}

async function validateToken() {
    try {
        const response = await fetch(`${apiBaseUrl}/api/auth/staff/validate`, {
            headers: {
                'Authorization': `Bearer ${staffToken}`
            }
        });

        if (!response.ok) {
            logout();
        }
    } catch (error) {
        console.error('Token validation error:', error);
        logout();
    }
}

async function loadTrips() {
    try {
        const response = await fetch(`${apiBaseUrl}/api/booking/staff/trips`, {
            headers: {
                'Authorization': `Bearer ${staffToken}`
            }
        });

        if (response.ok) {
            const result = await response.json();
            if (result.success && result.data) {
                populateTripOptions(result.data);
            }
        }
    } catch (error) {
        console.error('Error loading trips:', error);
    }
}

function populateTripOptions(trips) {
    const tripSelect = document.getElementById('tripId');
    
    // Keep the "All Trips" option
    tripSelect.innerHTML = '<option value="">All Trips</option>';
    
    // Add trip options
    trips.forEach(trip => {
        const option = document.createElement('option');
        option.value = trip.tripId;
        option.textContent = trip.displayText;
        tripSelect.appendChild(option);
    });
}

async function loadCustomers(page = 1) {
    showLoading(true);
    
    try {
        const params = new URLSearchParams({
            page: page,
            pageSize: 10,
            ...currentFilters
        });

        const response = await fetch(`${apiBaseUrl}/api/booking/staff/customers?${params}`, {
            headers: {
                'Authorization': `Bearer ${staffToken}`
            }
        });

        if (response.ok) {
            const result = await response.json();
            if (result.success && result.data) {
                displayCustomers(result.data);
            } else {
                showNoData();
            }
        } else {
            showNoData();
        }
    } catch (error) {
        console.error('Error loading customers:', error);
        showNoData();
    } finally {
        showLoading(false);
    }
}

function displayCustomers(data) {
    const tableBody = document.getElementById('customersTableBody');
    const noData = document.getElementById('noData');
    
    if (!data.data || data.data.length === 0) {
        showNoData();
        return;
    }

    noData.style.display = 'none';
    
    tableBody.innerHTML = data.data.map(customer => `
        <tr>
            <td><strong>${customer.bookingCode}</strong></td>
            <td>${customer.contactName}</td>
            <td>
                <div>${customer.contactPhone}</div>
                <small style="color: #666;">${customer.contactEmail}</small>
            </td>
            <td>
                <div><strong>${customer.tripCode || 'N/A'}</strong></div>
                <small style="color: #666;">${customer.trainNumber || 'N/A'}</small>
            </td>
            <td>
                <div>${customer.departureStation || 'N/A'}</div>
                <small style="color: #666;">${customer.departureTime ? new Date(customer.departureTime).toLocaleString() : 'N/A'}</small>
            </td>
            <td>
                <span class="status-badge status-${customer.bookingStatus.toLowerCase()}">
                    ${customer.bookingStatus}
                </span>
            </td>
            <td>
                <span class="payment-status payment-${customer.paymentStatus?.toLowerCase() || 'pending'}">
                    ${customer.paymentStatus || 'Pending'}
                </span>
            </td>
            <td><strong>${Number(customer.totalPrice).toLocaleString()} VND</strong></td>
            <td>${customer.ticketCount}</td>
            <td>${new Date(customer.createdAt).toLocaleDateString()}</td>
        </tr>
    `).join('');

    updatePagination(data);
}

function updatePagination(data) {
    const pagination = document.getElementById('pagination');
    currentPage = data.page;
    totalPages = data.totalPages;

    let paginationHTML = '';

    // Previous button
    paginationHTML += `
        <button onclick="changePage(${currentPage - 1})" ${currentPage <= 1 ? 'disabled' : ''}>
            <i class="fa fa-chevron-left"></i> Previous
        </button>
    `;

    // Page numbers
    const startPage = Math.max(1, currentPage - 2);
    const endPage = Math.min(totalPages, currentPage + 2);

    for (let i = startPage; i <= endPage; i++) {
        paginationHTML += `
            <button onclick="changePage(${i})" class="${i === currentPage ? 'current-page' : ''}">
                ${i}
            </button>
        `;
    }

    // Next button
    paginationHTML += `
        <button onclick="changePage(${currentPage + 1})" ${currentPage >= totalPages ? 'disabled' : ''}>
            Next <i class="fa fa-chevron-right"></i>
        </button>
    `;

    pagination.innerHTML = paginationHTML;
}

function changePage(page) {
    if (page >= 1 && page <= totalPages) {
        loadCustomers(page);
    }
}

function searchCustomers() {
    currentFilters = {
        searchTerm: document.getElementById('searchTerm').value,
        paymentStatus: document.getElementById('paymentStatus').value,
        createdFrom: document.getElementById('createdFrom').value,
        createdTo: document.getElementById('createdTo').value,
        tripId: document.getElementById('tripId').value
    };

    // Remove empty filters
    Object.keys(currentFilters).forEach(key => {
        if (!currentFilters[key]) {
            delete currentFilters[key];
        }
    });

    loadCustomers(1);
}

function clearFilters() {
    document.getElementById('searchTerm').value = '';
    document.getElementById('paymentStatus').value = '';
    document.getElementById('createdFrom').value = '';
    document.getElementById('createdTo').value = '';
    document.getElementById('tripId').value = '';
    
    currentFilters = {};
    loadCustomers(1);
}

function showLoading(show) {
    const loadingSpinner = document.getElementById('loadingSpinner');
    const tableContainer = document.querySelector('.table-container');
    
    if (show) {
        loadingSpinner.classList.add('show');
        tableContainer.style.display = 'none';
    } else {
        loadingSpinner.classList.remove('show');
        tableContainer.style.display = 'block';
    }
}

function showNoData() {
    const tableContainer = document.querySelector('.table-container');
    const noData = document.getElementById('noData');
    const pagination = document.getElementById('pagination');
    
    tableContainer.style.display = 'none';
    noData.style.display = 'block';
    pagination.innerHTML = '';
}

function logout() {
    localStorage.removeItem('staffToken');
    localStorage.removeItem('staffUser');
    window.location.href = '/Auth/StaffLogin';
}
</script> 