@{
    ViewData["Title"] = "Staff Management Dashboard";
    Layout = "_StaffLayout";
}

<style>
    .staff-dashboard {
        display: flex;
        min-height: 100vh;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .sidebar {
        width: 280px;
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        box-shadow: 2px 0 20px rgba(0, 0, 0, 0.1);
        padding: 30px 0;
        position: fixed;
        height: 100vh;
        overflow-y: auto;
    }

    .main-content {
        flex: 1;
        margin-left: 280px;
        padding: 30px;
        background: #f8f9fa;
        min-height: 100vh;
    }

    .sidebar-header {
        text-align: center;
        padding: 0 30px 30px;
        border-bottom: 1px solid #e9ecef;
        margin-bottom: 30px;
    }

    .staff-avatar {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea, #764ba2);
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 15px;
        color: white;
        font-size: 32px;
        font-weight: bold;
    }

    .staff-name {
        font-size: 18px;
        font-weight: 600;
        color: #333;
        margin-bottom: 5px;
    }

    .staff-role {
        font-size: 14px;
        color: #666;
    }

    .nav-menu {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .nav-item {
        margin-bottom: 5px;
    }

    .nav-link {
        display: flex;
        align-items: center;
        padding: 15px 30px;
        color: #555;
        text-decoration: none;
        transition: all 0.3s ease;
        border-left: 3px solid transparent;
    }

    .nav-link:hover {
        background: rgba(102, 126, 234, 0.1);
        color: #667eea;
        border-left-color: #667eea;
        text-decoration: none;
    }

    .nav-link.active {
        background: rgba(102, 126, 234, 0.15);
        color: #667eea;
        border-left-color: #667eea;
        font-weight: 600;
    }

    .nav-icon {
        width: 20px;
        margin-right: 15px;
        font-size: 16px;
    }

    .dashboard-header {
        background: white;
        padding: 30px;
        border-radius: 15px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
        margin-bottom: 30px;
    }

    .dashboard-title {
        font-size: 28px;
        font-weight: 700;
        color: #333;
        margin-bottom: 10px;
    }

    .dashboard-subtitle {
        color: #666;
        font-size: 16px;
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .stat-card {
        background: white;
        padding: 25px;
        border-radius: 15px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
        text-align: center;
        transition: transform 0.3s ease;
    }

    .stat-card:hover {
        transform: translateY(-5px);
    }

    .stat-icon {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 15px;
        font-size: 24px;
        color: white;
    }

    .stat-icon.blue {
        background: linear-gradient(135deg, #667eea, #764ba2);
    }

    .stat-icon.green {
        background: linear-gradient(135deg, #28a745, #20c997);
    }

    .stat-icon.orange {
        background: linear-gradient(135deg, #fd7e14, #ffc107);
    }

    .stat-icon.red {
        background: linear-gradient(135deg, #dc3545, #e83e8c);
    }

    .stat-number {
        font-size: 32px;
        font-weight: 700;
        color: #333;
        margin-bottom: 5px;
    }

    .stat-label {
        color: #666;
        font-size: 14px;
        text-transform: uppercase;
        letter-spacing: 1px;
    }

    .quick-actions {
        background: white;
        padding: 30px;
        border-radius: 15px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
    }

    .quick-actions h3 {
        margin-bottom: 20px;
        color: #333;
        font-weight: 600;
    }

    .action-buttons {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 15px;
    }

    .action-btn {
        display: flex;
        align-items: center;
        padding: 15px 20px;
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        text-decoration: none;
        border-radius: 10px;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
        font-size: 14px;
        font-weight: 500;
    }

    .action-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
        color: white;
        text-decoration: none;
    }

    .action-btn i {
        margin-right: 10px;
        font-size: 16px;
    }

    .logout-btn {
        position: absolute;
        bottom: 30px;
        left: 30px;
        right: 30px;
        padding: 12px;
        background: #dc3545;
        color: white;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
        font-size: 14px;
    }

    .logout-btn:hover {
        background: #c82333;
        transform: translateY(-2px);
    }

    @@media (max-width: 768px) {
        .sidebar {
            transform: translateX(-100%);
            transition: transform 0.3s ease;
        }

        .sidebar.open {
            transform: translateX(0);
        }

        .main-content {
            margin-left: 0;
        }

        .stats-grid {
            grid-template-columns: 1fr;
        }
    }
</style>

<div class="staff-dashboard">
    <!-- Sidebar -->
    <div class="sidebar" id="sidebar">
        <div class="sidebar-header">
            <div class="staff-avatar" id="staffAvatar">
                <i class="fa fa-user"></i>
            </div>
            <div class="staff-name" id="staffName">Staff Member</div>
            <div class="staff-role">Station Staff</div>
        </div>

        <ul class="nav-menu">
            <li class="nav-item">
                <a href="/Staff/Management" class="nav-link active">
                    <i class="fa fa-dashboard nav-icon"></i>
                    Dashboard
                </a>
            </li>
            <li class="nav-item">
                <a href="/Staff/QRScanner" class="nav-link">
                    <i class="fa fa-qrcode nav-icon"></i>
                    QR Scanner
                </a>
            </li>
            <li class="nav-item">
                <a href="/Staff/CustomerList" class="nav-link">
                    <i class="fa fa-users nav-icon"></i>
                    Customer List
                </a>
            </li>
        </ul>

        <button class="logout-btn" onclick="logout()">
            <i class="fa fa-sign-out"></i> Logout
        </button>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <div class="dashboard-header">
            <h1 class="dashboard-title">Staff Management Dashboard</h1>
            <p class="dashboard-subtitle">Welcome back! Here's an overview of today's activities.</p>
        </div>

        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-icon blue">
                    <i class="fa fa-ticket"></i>
                </div>
                <div class="stat-number" id="totalBookings">Loading...</div>
                <div class="stat-label">Total Bookings</div>
            </div>

            <div class="stat-card">
                <div class="stat-icon green">
                    <i class="fa fa-check-circle"></i>
                </div>
                <div class="stat-number" id="confirmedBookings">Loading...</div>
                <div class="stat-label">Confirmed</div>
            </div>

            <div class="stat-card">
                <div class="stat-icon orange">
                    <i class="fa fa-clock-o"></i>
                </div>
                <div class="stat-number" id="pendingBookings">Loading...</div>
                <div class="stat-label">Pending</div>
            </div>

            <div class="stat-card">
                <div class="stat-icon red">
                    <i class="fa fa-times-circle"></i>
                </div>
                <div class="stat-number" id="cancelledBookings">Loading...</div>
                <div class="stat-label">Cancelled</div>
            </div>
        </div>

        <div class="quick-actions">
            <h3>Quick Actions</h3>
            <div class="action-buttons">
                <a href="/Staff/QRScanner" class="action-btn">
                    <i class="fa fa-qrcode"></i>
                    Scan QR Code
                </a>
                <a href="/Staff/CustomerList" class="action-btn">
                    <i class="fa fa-users"></i>
                    View Customers
                </a>
                <button class="action-btn" onclick="refreshStats()">
                    <i class="fa fa-refresh"></i>
                    Refresh Stats
                </button>
            </div>
        </div>
    </div>
</div>

<script>
let staffToken = null;
let staffUser = null;

// Use the correct backend API base URL for development
const apiBaseUrl = 'http://localhost:5014';

document.addEventListener('DOMContentLoaded', function() {
    console.log('Management page loaded');
    updateDebugInfo('Management page loaded');
    
    // Check authentication
    staffToken = localStorage.getItem('staffToken');
    const staffUserStr = localStorage.getItem('staffUser');
    
    console.log('Staff token:', staffToken ? 'Found' : 'Not found');
    console.log('Staff user:', staffUserStr ? 'Found' : 'Not found');
    
    updateDebugInfo('Authentication check', {
        hasToken: !!staffToken,
        hasUser: !!staffUserStr
    });
    
    if (!staffToken || !staffUserStr) {
        console.log('Redirecting to login page');
        updateDebugInfo('Redirecting to login page - missing credentials');
        window.location.href = '/Auth/StaffLogin';
        return;
    }

    try {
        staffUser = JSON.parse(staffUserStr);
        console.log('Staff user parsed:', staffUser);
        updateStaffInfo();
        updateDebugInfo('Staff user parsed successfully', staffUser);
    } catch (e) {
        console.error('Error parsing staff user:', e);
        updateDebugInfo('Error parsing staff user: ' + e.message);
        logout();
    }

    // Validate token and load dashboard data
    console.log('Starting validation and stats loading');
    updateDebugInfo('Starting validation and stats loading');
    validateToken();
    loadDashboardStats();
});

function updateStaffInfo() {
    const staffName = document.getElementById('staffName');
    const staffAvatar = document.getElementById('staffAvatar');
    
    if (staffUser) {
        staffName.textContent = staffUser.fullName || 'Staff Member';
        
        // Set avatar with initials
        if (staffUser.fullName) {
            const initials = staffUser.fullName.split(' ').map(n => n[0]).join('').toUpperCase();
            staffAvatar.innerHTML = initials;
        }
    }
}

async function validateToken() {
    try {
        console.log('Validating token...');
        const response = await fetch(`${apiBaseUrl}/api/auth/staff/validate`, {
            headers: {
                'Authorization': `Bearer ${staffToken}`
            }
        });

        console.log('Token validation response:', response.status, response.statusText);

        if (!response.ok) {
            console.log('Token validation failed, logging out');
            logout();
        } else {
            console.log('Token validation successful');
        }
    } catch (error) {
        console.error('Token validation error:', error);
        logout();
    }
}

async function loadDashboardStats() {
    try {
        console.log('Loading dashboard stats...');
        const response = await fetch(`${apiBaseUrl}/api/booking/staff/customers?page=1&pageSize=1000`, {
            headers: {
                'Authorization': `Bearer ${staffToken}`
            }
        });

        console.log('Dashboard stats response:', response.status, response.statusText);

        if (response.ok) {
            const result = await response.json();
            console.log('Dashboard stats result:', result);
            if (result.success && result.data) {
                updateStats(result.data.data);
            }
        } else {
            console.error('Dashboard stats failed:', response.status, response.statusText);
        }
    } catch (error) {
        console.error('Error loading dashboard stats:', error);
    }
}

function updateStats(bookings) {
    const totalBookings = bookings.length;
    const confirmedBookings = bookings.filter(b => b.bookingStatus === 'Confirmed').length;
    const pendingBookings = bookings.filter(b => b.paymentStatus === 'Pending').length;
    const cancelledBookings = bookings.filter(b => b.bookingStatus === 'Cancelled').length;

    document.getElementById('totalBookings').textContent = totalBookings;
    document.getElementById('confirmedBookings').textContent = confirmedBookings;
    document.getElementById('pendingBookings').textContent = pendingBookings;
    document.getElementById('cancelledBookings').textContent = cancelledBookings;
    
    updateDebugInfo('Stats updated successfully', {
        totalBookings,
        confirmedBookings,
        pendingBookings,
        cancelledBookings
    });
}

function updateDebugInfo(message, data = null) {
    const debugContent = document.getElementById('debug-content');
    const timestamp = new Date().toLocaleTimeString();
    let debugText = `[${timestamp}] ${message}`;
    
    if (data) {
        debugText += '\n' + JSON.stringify(data, null, 2);
    }
    
    debugContent.textContent = debugText;
}

async function refreshStats() {
    const refreshBtn = event.target;
    const originalText = refreshBtn.innerHTML;
    
    refreshBtn.innerHTML = '<i class="fa fa-spinner fa-spin"></i> Refreshing...';
    refreshBtn.disabled = true;
    
    await loadDashboardStats();
    
    setTimeout(() => {
        refreshBtn.innerHTML = originalText;
        refreshBtn.disabled = false;
    }, 1000);
}

function logout() {
    localStorage.removeItem('staffToken');
    localStorage.removeItem('staffUser');
    window.location.href = '/Auth/StaffLogin';
}
</script> 